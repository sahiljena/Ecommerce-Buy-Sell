{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Buffer } from 'buffer'; // console.log(dtoken);\n\nexport default function useToken() {\n  _s();\n\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken === null || userToken === void 0 ? void 0 : userToken.token;\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken.token);\n  };\n\n  const setUserObj = () => {\n    if (token) {\n      let str = token.split('.')[1];\n      let buff = new Buffer(str, 'base64');\n      let base64ToStringNew = buff.toString('ascii');\n      let userdetails = JSON.parse(base64ToStringNew);\n      return userdetails;\n    }\n  };\n\n  const [user, setUser] = useState(setUserObj());\n\n  const saveUser = () => {\n    setUser(setUserObj());\n  }; //setUser(setUserObj());\n\n\n  return {\n    setToken: saveToken,\n    token,\n    user\n  };\n}\n\n_s(useToken, \"Uo5WeHcG5mqQ17khucPMZOd7aKk=\");","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/Desktop/olx-clone/ecomm-frontend/src/components/useToken.js"],"names":["useState","Buffer","useToken","getToken","tokenString","localStorage","getItem","userToken","JSON","parse","token","setToken","saveToken","setItem","stringify","setUserObj","str","split","buff","base64ToStringNew","toString","userdetails","user","setUser","saveUser"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAQC,MAAR,QAAqB,QAArB,C,CAEE;;AAEF,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAX,CAAlB;AACA,WAAOG,SAAP,aAAOA,SAAP,uBAAOA,SAAS,CAAEG,KAAlB;AACD,GAJD;;AAMA,QAAM,CAACA,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACG,QAAQ,EAAT,CAAlC;;AAGA,QAAMS,SAAS,GAAGL,SAAS,IAAI;AAC7BF,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACM,SAAL,CAAeP,SAAf,CAA9B;AACAI,IAAAA,QAAQ,CAACJ,SAAS,CAACG,KAAX,CAAR;AACD,GAHD;;AAKA,QAAMK,UAAU,GAAG,MAAK;AACtB,QAAGL,KAAH,EAAS;AACP,UAAIM,GAAG,GAAGN,KAAK,CAACO,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAV;AACA,UAAIC,IAAI,GAAG,IAAIjB,MAAJ,CAAWe,GAAX,EAAgB,QAAhB,CAAX;AACA,UAAIG,iBAAiB,GAAGD,IAAI,CAACE,QAAL,CAAc,OAAd,CAAxB;AACA,UAAIC,WAAW,GAAGb,IAAI,CAACC,KAAL,CAAWU,iBAAX,CAAlB;AACA,aAAOE,WAAP;AACD;AACF,GARD;;AASA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAACe,UAAU,EAAX,CAAhC;;AAEA,QAAMS,QAAQ,GAAG,MAAK;AACpBD,IAAAA,OAAO,CAACR,UAAU,EAAX,CAAP;AACD,GAFD,CA1BiC,CA8BjC;;;AAEA,SAAO;AACLJ,IAAAA,QAAQ,EAAEC,SADL;AAELF,IAAAA,KAFK;AAGLY,IAAAA;AAHK,GAAP;AAKD;;GArCuBpB,Q","sourcesContent":["import { useState } from 'react';\r\nimport {Buffer} from 'buffer';\r\n\r\n  // console.log(dtoken);\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken?.token\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n  \r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken.token);\r\n  };\r\n\r\n  const setUserObj = () =>{\r\n    if(token){\r\n      let str = token.split('.')[1];\r\n      let buff = new Buffer(str, 'base64');\r\n      let base64ToStringNew = buff.toString('ascii');\r\n      let userdetails = JSON.parse(base64ToStringNew);\r\n      return userdetails;\r\n    }\r\n  }\r\n  const [user, setUser] = useState(setUserObj());\r\n\r\n  const saveUser = () =>{\r\n    setUser(setUserObj());\r\n  }\r\n\r\n  //setUser(setUserObj());\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token,\r\n    user,\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}