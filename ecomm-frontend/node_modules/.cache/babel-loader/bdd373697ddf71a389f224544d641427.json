{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\olx-clone\\\\ecomm-frontend\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    token,\n    setToken\n  } = _ref;\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [listings, setListings] = useState([]);\n\n  const fetchListings = async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:5000/api/listings');\n      const tours = await response.json();\n      setLoading(false);\n      setListings(tours);\n    } catch (error) {\n      setLoading(false);\n      console.log(\"Error Occured\");\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchListings();\n  }, []);\n\n  if (!token) {\n    return navigate(\"/login\");\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading...\"\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), JSON.stringify(listings)]\n  }, void 0, true);\n};\n\n_s(Home, \"RVr4xesSDEfqgFTcGxlCRo9I9rY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/Desktop/olx-clone/ecomm-frontend/src/pages/Home.js"],"names":["React","useState","useEffect","Navbar","useNavigate","Home","token","setToken","navigate","loading","setLoading","listings","setListings","fetchListings","response","fetch","tours","json","error","console","log","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;;AACA,MAAMC,IAAI,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAACC,IAAAA,KAAD;AAASC,IAAAA;AAAT,GAAuB;AAEjC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;;AAIA,QAAMY,aAAa,GAAG,YAAW;AAC7BH,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG;AACC,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA5B;AACA,YAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,WAAW,CAACI,KAAD,CAAX;AACH,KALD,CAKE,OAAME,KAAN,EAAY;AACVR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAZD;;AAaAhB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAG,CAACP,KAAJ,EAAU;AACN,WAAQE,QAAQ,CAAC,QAAD,CAAhB;AACH;;AAED,MAAGC,OAAH,EAAW;AACP,wBACI;AAAA;AAAA,qBADJ;AAGH;;AACD,sBACI;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,YADA,EAECc,IAAI,CAACC,SAAL,CAAeX,QAAf,CAFD;AAAA,kBADJ;AAMH,CAzCD;;GAAMN,I;UAEeD,W;;;KAFfC,I;AA2CN,eAAeA,IAAf","sourcesContent":["import React,{useState,  useEffect} from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst Home = ({token , setToken }) =>{\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [listings, setListings] = useState([]);\r\n\r\n    \r\n\r\n    const fetchListings = async () =>{\r\n        setLoading(true)\r\n        try{\r\n            const response = await fetch('http://localhost:5000/api/listings')\r\n            const tours = await response.json()\r\n            setLoading(false)\r\n            setListings(tours)\r\n        } catch(error){\r\n            setLoading(false)\r\n            console.log(\"Error Occured\");\r\n            console.log(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchListings()\r\n    }, [])\r\n\r\n    if(!token){\r\n        return (navigate(\"/login\"));\r\n    }\r\n\r\n    if(loading){\r\n        return (\r\n            <>Loading...</>\r\n        );\r\n    }\r\n    return(\r\n        <>\r\n        <Navbar setToken={setToken} />\r\n        {JSON.stringify(listings)}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}