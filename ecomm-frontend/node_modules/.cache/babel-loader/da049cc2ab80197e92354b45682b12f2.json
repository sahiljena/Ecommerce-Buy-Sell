{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport jwt_decode from \"jwt-decode\"; // console.log(dtoken);\n\nexport default function useToken() {\n  _s();\n\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken === null || userToken === void 0 ? void 0 : userToken.token;\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken.token);\n  };\n\n  let b64DecodeUnicode = str => decodeURIComponent(Array.prototype.map.call(atob(str), c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n\n  let parseJwt = () => JSON.parse(b64DecodeUnicode(token.split('.')[1].replace('-', '+').replace('_', '/')));\n\n  return {\n    setToken: saveToken,\n    token,\n    user: parseJwt\n  };\n}\n\n_s(useToken, \"YxmPjHzwYO/ewBTUGNAd/YBNtug=\");","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/Desktop/olx-clone/ecomm-frontend/src/components/useToken.js"],"names":["useState","jwt_decode","useToken","getToken","tokenString","localStorage","getItem","userToken","JSON","parse","token","setToken","saveToken","setItem","stringify","b64DecodeUnicode","str","decodeURIComponent","Array","prototype","map","call","atob","c","charCodeAt","toString","slice","join","parseJwt","split","replace","user"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEE;;AAEF,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAX,CAAlB;AACA,WAAOG,SAAP,aAAOA,SAAP,uBAAOA,SAAS,CAAEG,KAAlB;AACD,GAJD;;AAMA,QAAM,CAACA,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACG,QAAQ,EAAT,CAAlC;;AAEA,QAAMS,SAAS,GAAGL,SAAS,IAAI;AAC7BF,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACM,SAAL,CAAeP,SAAf,CAA9B;AACAI,IAAAA,QAAQ,CAACJ,SAAS,CAACG,KAAX,CAAR;AACD,GAHD;;AAKA,MAAIK,gBAAgB,GAAGC,GAAG,IAC1BC,kBAAkB,CAChBC,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoBC,IAApB,CAAyBC,IAAI,CAACN,GAAD,CAA7B,EAAoCO,CAAC,IACnC,MAAM,CAAC,OAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,CAAR,EAAsCC,KAAtC,CAA4C,CAAC,CAA7C,CADR,EAEEC,IAFF,CAEO,EAFP,CADgB,CADlB;;AAMF,MAAIC,QAAQ,GAAG,MACbpB,IAAI,CAACC,KAAL,CACEM,gBAAgB,CACdL,KAAK,CAACmB,KAAN,CAAY,GAAZ,EAAiB,CAAjB,EAAoBC,OAApB,CAA4B,GAA5B,EAAiC,GAAjC,EAAsCA,OAAtC,CAA8C,GAA9C,EAAmD,GAAnD,CADc,CADlB,CADF;;AAOE,SAAO;AACLnB,IAAAA,QAAQ,EAAEC,SADL;AAELF,IAAAA,KAFK;AAGLqB,IAAAA,IAAI,EAACH;AAHA,GAAP;AAKD;;GAhCuB1B,Q","sourcesContent":["import { useState } from 'react';\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n  // console.log(dtoken);\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken?.token\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken.token);\r\n  };\r\n\r\n  let b64DecodeUnicode = str =>\r\n  decodeURIComponent(\r\n    Array.prototype.map.call(atob(str), c =>\r\n      '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\r\n    ).join(''))\r\n\r\nlet parseJwt = () =>\r\n  JSON.parse(\r\n    b64DecodeUnicode(\r\n      token.split('.')[1].replace('-', '+').replace('_', '/')\r\n    )\r\n  )\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token,\r\n    user:parseJwt,\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}