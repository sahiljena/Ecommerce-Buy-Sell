{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\olx-clone\\\\ecomm-frontend\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    token,\n    setToken\n  } = _ref;\n  const navigate = useNavigate();\n  const [status, setStatus] = useState(0);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const LoginStatusMessage = props => {\n    if (status === 401) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-yellow-200 text-sm text-white rounded px-1 py-1\",\n        children: [errorMessage, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-black text-xs\",\n          children: [\"To register click \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/register\",\n            className: \"text-blue-600\",\n            children: \"here \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (errorMessage) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-300 text-xs text-white rounded px-1 py-1\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n\n  const handleLogin = event => {\n    event.preventDefault();\n    setLoading(true);\n    setErrorMessage(\"\");\n    setStatus(\"\");\n\n    if (email && password) {\n      fetch('http://localhost:5000/api/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      }).then(function (response) {\n        setLoading(false);\n        setStatus(response.status);\n        return response.json();\n      }) //Then with the data from the response in JSON...\n      .then(data => {\n        setToken(data);\n\n        if (data.message === \"Passwords does not match\") {\n          setErrorMessage(\"Wrong username or password\");\n          return false;\n        }\n\n        if (data.message === \"Email not found\") {\n          setErrorMessage(\"You are not yet registered with us.\");\n          setStatus(401);\n          return false;\n        }\n\n        console.log('Success:', data);\n        return navigate('/');\n      }) //Then with the error genereted...\n      .catch(error => {\n        setErrorMessage(\"Something Went wrong\");\n        console.error('Error:', error);\n      });\n    } else {\n      setLoading(false);\n      setErrorMessage(\"Something Went wrong\");\n      console.log(\"Something wrong !!\");\n    }\n  };\n\n  if (token) {\n    navigate('/');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      token: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"w-full max-w-xs\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          className: \"bg-white shadow-lg rounded px-8 pt-6 pb-8 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 text-center text-lg font-bold text-gray-600\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(LoginStatusMessage, {\n              status: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-bold tracking-tight text-gray-500 mb-2\",\n              for: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              id: \"email\",\n              type: \"email\",\n              placeholder: \"name@example.com\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-bold tracking-tight text-gray-500 mb-2\",\n              for: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\",\n              id: \"password\",\n              type: \"password\",\n              placeholder: \"******************\",\n              value: password,\n              onChange: e => {\n                setPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `w-full ${loading ? 'bg-gray-300' : 'bg-blue-500 hover:bg-blue-700'}  text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline`,\n              type: \"submit\",\n              children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"Signing in...\"\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"Sign In\"\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"TT6chpv4LkptyeGsiLl1jhDqH90=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/Desktop/olx-clone/ecomm-frontend/src/pages/Login.js"],"names":["React","useState","PropTypes","useNavigate","Navbar","Login","token","setToken","navigate","status","setStatus","email","setEmail","password","setPassword","errorMessage","setErrorMessage","loading","setLoading","LoginStatusMessage","props","handleLogin","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","message","console","log","catch","error","e","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from '../components/Navbar';\r\nconst Login = ({token, setToken}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [status, setStatus] = useState(0);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const LoginStatusMessage = (props) =>{\r\n        if(status===401){\r\n            return <div className='bg-yellow-200 text-sm text-white rounded px-1 py-1'>\r\n                {errorMessage}<br />\r\n                <span className=\"text-black text-xs\">To register click <a href='/register' className='text-blue-600'>here </a></span>\r\n            </div>\r\n        }\r\n        if(errorMessage){\r\n            return <div className='bg-red-300 text-xs text-white rounded px-1 py-1'>\r\n                {errorMessage}\r\n            </div>\r\n        }\r\n        else{\r\n            return <></>\r\n        }\r\n    }\r\n\r\n    const handleLogin = (event) =>{\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setErrorMessage(\"\");\r\n        setStatus(\"\");\r\n        if(email && password){\r\n            fetch('http://localhost:5000/api/user/login',{\r\n                method: 'POST',\r\n                headers: {\r\n                'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    email:email,\r\n                    password:password,\r\n                })\r\n            })\r\n            .then(function (response) {\r\n                setLoading(false);\r\n                setStatus(response.status)\r\n                return response.json();\r\n            })\r\n            //Then with the data from the response in JSON...\r\n            .then((data) => {\r\n                setToken(data);\r\n                if(data.message===\"Passwords does not match\"){\r\n                    setErrorMessage(\"Wrong username or password\")\r\n                    return false\r\n                }\r\n                if(data.message===\"Email not found\"){\r\n                    setErrorMessage(\"You are not yet registered with us.\")\r\n                    setStatus(401)\r\n                    return false\r\n                }\r\n                console.log('Success:', data);\r\n                return navigate('/');\r\n            })\r\n            //Then with the error genereted...\r\n            .catch((error) => {\r\n                setErrorMessage(\"Something Went wrong\");\r\n                console.error('Error:', error);\r\n            });\r\n\r\n        }else{\r\n            setLoading(false);\r\n            setErrorMessage(\"Something Went wrong\");\r\n            console.log(\"Something wrong !!\");\r\n        }\r\n    }\r\n\r\n    if(token){\r\n        navigate('/');\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Navbar token={token} />\r\n            <div className='flex justify-center mt-10'>\r\n                <div class=\"w-full max-w-xs\">\r\n                    <form onSubmit={handleLogin} className=\"bg-white shadow-lg rounded px-8 pt-6 pb-8 mb-4\">\r\n                        <div className='mb-4 text-center text-lg font-bold text-gray-600'>\r\n                            <h2>Sign In</h2>\r\n                        </div>\r\n                        <div className='mb-4'>\r\n                            <LoginStatusMessage status={status}/>\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-sm font-bold tracking-tight text-gray-500 mb-2\" for=\"email\">\r\n                                Email\r\n                            </label>\r\n                            <input \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \r\n                                id=\"email\" \r\n                                type=\"email\" \r\n                                placeholder=\"name@example.com\"\r\n                                value = {email}\r\n                                onChange={(e)=>setEmail(e.target.value)}\r\n                            />\r\n                            <p className=\"text-red-500 text-xs italic\"></p>\r\n                        </div>\r\n                        <div className=\"mb-6\">\r\n                            <label className=\"block text-sm font-bold tracking-tight text-gray-500 mb-2\" for=\"password\">\r\n                                Password\r\n                            </label>\r\n                            <input \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" \r\n                                id=\"password\" \r\n                                type=\"password\" \r\n                                placeholder=\"******************\"\r\n                                value={password}\r\n                                onChange={(e)=>{setPassword(e.target.value)}}\r\n                            />\r\n                            <p className=\"text-red-500 text-xs italic\"></p>\r\n                        </div>\r\n                        <div className=\"flex items-center justify-center\">\r\n                            <button \r\n                                className={`w-full ${loading?'bg-gray-300':'bg-blue-500 hover:bg-blue-700'}  text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline`}\r\n                                type=\"submit\"\r\n\r\n                            >\r\n                                {loading?<>Signing in...</>:<>Sign In</>}\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}