{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // console.log(dtoken);\n\nexport default function useToken() {\n  _s();\n\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken === null || userToken === void 0 ? void 0 : userToken.token;\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken.token);\n  };\n\n  const [userName, setUserName] = useState();\n\n  const getUser = () => {\n    if (token) {\n      let str = token.split('.')[1];\n      let buff = new Buffer(str, 'base64');\n      let base64ToStringNew = JSON.parse(buff.toString('ascii'));\n      return base64ToStringNew.userName;\n    }\n\n    return;\n  };\n\n  useEffect(() => {\n    setUserName(getUser());\n  }, [token]);\n  return {\n    setToken: saveToken,\n    token,\n    userName\n  };\n}\n\n_s(useToken, \"UWSvzzhgYH3fW8Uxeg78V4QxcMU=\");","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/Desktop/olx-clone/ecomm-frontend/src/components/useToken.js"],"names":["useState","useEffect","useToken","getToken","tokenString","localStorage","getItem","userToken","JSON","parse","token","setToken","saveToken","setItem","stringify","userName","setUserName","getUser","str","split","buff","Buffer","base64ToStringNew","toString"],"mappings":";;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC,C,CAEE;;AAEF,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAX,CAAlB;AACA,WAAOG,SAAP,aAAOA,SAAP,uBAAOA,SAAS,CAAEG,KAAlB;AACD,GAJD;;AAMA,QAAM,CAACA,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACG,QAAQ,EAAT,CAAlC;;AAGA,QAAMS,SAAS,GAAGL,SAAS,IAAI;AAC7BF,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACM,SAAL,CAAeP,SAAf,CAA9B;AACAI,IAAAA,QAAQ,CAACJ,SAAS,CAACG,KAAX,CAAR;AACD,GAHD;;AAMA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,EAAxC;;AAEA,QAAMiB,OAAO,GAAG,MAAK;AACnB,QAAGP,KAAH,EAAS;AACP,UAAIQ,GAAG,GAAGR,KAAK,CAACS,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAV;AACA,UAAIC,IAAI,GAAG,IAAIC,MAAJ,CAAWH,GAAX,EAAgB,QAAhB,CAAX;AACA,UAAII,iBAAiB,GAAGd,IAAI,CAACC,KAAL,CAAWW,IAAI,CAACG,QAAL,CAAc,OAAd,CAAX,CAAxB;AACA,aAAOD,iBAAiB,CAACP,QAAzB;AACD;;AACD;AACD,GARD;;AAUAd,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,WAAW,CAACC,OAAO,EAAR,CAAX;AACH,GAFQ,EAEN,CAACP,KAAD,CAFM,CAAT;AAKA,SAAO;AACLC,IAAAA,QAAQ,EAAEC,SADL;AAELF,IAAAA,KAFK;AAGLK,IAAAA;AAHK,GAAP;AAKD;;GAtCuBb,Q","sourcesContent":["import { useState,useEffect } from 'react';\r\n\r\n  // console.log(dtoken);\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken?.token\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n  \r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken.token);\r\n  };\r\n\r\n\r\n  const [userName, setUserName] = useState();\r\n\r\n  const getUser = () =>{\r\n    if(token){\r\n      let str = token.split('.')[1];\r\n      let buff = new Buffer(str, 'base64');\r\n      let base64ToStringNew = JSON.parse(buff.toString('ascii'));\r\n      return base64ToStringNew.userName;\r\n    }\r\n    return;\r\n  }\r\n\r\n  useEffect(() => {\r\n      setUserName(getUser());\r\n  }, [token]);\r\n\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token,\r\n    userName,\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}