[{"C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\index.js":"1","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\App.js":"3","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\pages\\Register.js":"4","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\pages\\Login.js":"5","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\pages\\Home.js":"6","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\components\\useToken.js":"7","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\components\\Navbar.js":"8","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\components\\Productcard.js":"9","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\pages\\NewListing.js":"10","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\pages\\Mylistings.js":"11","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\pages\\Category.js":"12","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\components\\Searchbar.js":"13","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\pages\\Productpage.js":"14","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\components\\Modal.js":"15"},{"size":607,"mtime":1642742738847,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1642161859830,"results":"18","hashOfConfig":"17"},{"size":1865,"mtime":1644492490258,"results":"19","hashOfConfig":"17"},{"size":6116,"mtime":1644494606270,"results":"20","hashOfConfig":"17"},{"size":5965,"mtime":1644492412168,"results":"21","hashOfConfig":"17"},{"size":2916,"mtime":1644494559306,"results":"22","hashOfConfig":"17"},{"size":955,"mtime":1642592222554,"results":"23","hashOfConfig":"17"},{"size":4157,"mtime":1644494415264,"results":"24","hashOfConfig":"17"},{"size":2321,"mtime":1644506015666,"results":"25","hashOfConfig":"17"},{"size":12694,"mtime":1644494585785,"results":"26","hashOfConfig":"17"},{"size":3098,"mtime":1644494573112,"results":"27","hashOfConfig":"17"},{"size":3254,"mtime":1644477434143,"results":"28","hashOfConfig":"17"},{"size":2628,"mtime":1644506719296,"results":"29","hashOfConfig":"17"},{"size":2568,"mtime":1644506669343,"results":"30","hashOfConfig":"17"},{"size":3580,"mtime":1644506419143,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"a5uty9",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\index.js",["75","76"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["77","78"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\App.js",["79","80"],"import React,{useState, useEffect} from 'react';\nimport './App.css';\nimport Login from './pages/Login'\nimport Home from './pages/Home'\nimport useToken from './components/useToken'\nimport Register from './pages/Register'\nimport NewProduct from './pages/NewListing'\nimport MyListings from './pages/Mylistings'\nimport Category from './pages/Category'\nimport Searchbar from './components/Searchbar'\nimport Productpage from './pages/Productpage'\nimport {Routes,Route} from \"react-router-dom\"\n\nfunction App() {\n\n  const {token, setToken} = useToken();\n\n  return(\n    <>\n    <Routes>\n      <Route path='/' exact element={<Home setToken={setToken} token={token} />} />\n      <Route path='/login' exact element={<Login setToken={setToken} token={token} />} />\n      <Route path='/register' exact element={<Register setToken={setToken} token={token} />} />\n      <Route path='/additem' exact element={<NewProduct setToken={setToken} token={token}  />} />\n      <Route path='/search' exact element={<Searchbar token={token} setToken={setToken}   />} />\n      <Route path='/item/:id' exact element={<Productpage token={token} setToken={setToken} />} />\n      <Route path='/mylistings' exact element={<MyListings setToken={setToken} token={token}  />} />\n      <Route path='/mobiles' exact element={<Category setToken={setToken} token={token} endpoint={\"https://ecomm-backend-xcv34.herokuapp.com/api/listings/mobile\"} category={\"Mobiles\"}  />} /> \n      <Route path='/books' exact element={<Category setToken={setToken} token={token} endpoint={\"https://ecomm-backend-xcv34.herokuapp.com/api/listings/book\"} category={\"Books\"}  />} /> \n      <Route path='/laptops' exact element={<Category setToken={setToken} token={token} endpoint={\"https://ecomm-backend-xcv34.herokuapp.com/api/listings/laptop\"} category={\"Laptops\"}  />} /> \n    </Routes>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\pages\\Register.js",["81"],"import React,{useState, useEffect} from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\"\r\nconst Register = ({token, setToken}) => {\r\n    //console.log(token);\r\n    const [status, setStatus] = useState(0);\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const RegisterStatusMessage = (props) =>{\r\n        if(props.status===201){\r\n            return <div className='bg-green-300 text-xs rounded px-1 py-1'>\r\n                Successfully Registered! , you can <a className='text-blue-600' href=\"/login\">login here</a>\r\n            </div>\r\n        }\r\n        if(props.status===500){\r\n            return <div className='bg-red-300 text-xs rounded px-1 py-1'>\r\n                Your account already exsists, you can <a className='text-blue-600' href=\"/login\">login here</a>\r\n            </div>\r\n        }\r\n        else{\r\n            return <></>\r\n        }\r\n    }\r\n\r\n    const handleRegister = (event) =>{\r\n        event.preventDefault();\r\n        if(name && email && password){\r\n            //console.log(name,password,email);\r\n            fetch('https://ecomm-backend-xcv34.herokuapp.com/api/user/new',{\r\n                method: 'POST',\r\n                headers: {\r\n                'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    name:name,\r\n                    email:email,\r\n                    password:password,\r\n                })\r\n            })\r\n            .then(function (response) {\r\n                setStatus(response.status)\r\n                return response.json();\r\n            })\r\n            //Then with the data from the response in JSON...\r\n            .then((data) => {\r\n            console.log('Success:', data);\r\n            })\r\n            //Then with the error genereted...\r\n            .catch((error) => {\r\n            console.error('Error:', error);\r\n            });\r\n\r\n        }else{\r\n            console.log(\"Something wrong !!\")\r\n        }\r\n    }\r\n\r\n    //console.log(token);\r\n\r\n    useEffect(() => {\r\n        if(token){\r\n            return(navigate('/'));\r\n        }\r\n    }, [token]);\r\n    \r\n\r\n    return(\r\n        <>\r\n        <Navbar token={token} setToken={setToken} />\r\n            <div className='flex justify-center mt-10'>\r\n                <div class=\"w-full max-w-xs\">\r\n                    <form onSubmit={handleRegister} className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n                        <div className='mb-4 text-center text-lg font-bold text-gray-600'>\r\n                            <h2>Register</h2>\r\n                        </div>\r\n                        <div className='mb-4'>\r\n                            <RegisterStatusMessage status={status} />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-sm font-bold tracking-tight text-gray-500 mb-2\" for=\"email\">\r\n                                Email\r\n                            </label>\r\n                            <input \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \r\n                                id=\"email\" \r\n                                type=\"email\" \r\n                                placeholder=\"name@example.com\"\r\n                                value = {email}\r\n                                onChange={(e)=>setEmail(e.target.value)}\r\n                            />\r\n                            <p className=\"text-red-500 text-xs italic\"></p>\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-sm font-bold tracking-tight text-gray-500 mb-2\" for=\"name\">\r\n                                Full Name\r\n                            </label>\r\n                            <input \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \r\n                                id=\"name\" \r\n                                type=\"text\" \r\n                                placeholder=\"Full Name\"\r\n                                value = {name}\r\n                                onChange={(e)=>{setName(e.target.value)}}\r\n                            />\r\n                            <p className=\"text-red-500 text-xs italic\"></p>\r\n                        </div>\r\n                        <div className=\"mb-6\">\r\n                            <label className=\"block text-sm font-bold tracking-tight text-gray-500 mb-2\" for=\"password\">\r\n                                Password\r\n                            </label>\r\n                            <input \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" \r\n                                id=\"password\" \r\n                                type=\"password\" \r\n                                placeholder=\"******************\"\r\n                                value={password}\r\n                                onChange={(e)=>{setPassword(e.target.value)}}\r\n                            />\r\n                            <p className=\"text-red-500 text-xs italic\"></p>\r\n                        </div>\r\n                        <div className=\"flex items-center justify-center\">\r\n                            <button \r\n                                className=\" w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" \r\n                                type=\"submit\"\r\n\r\n                            >\r\n                                Register\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\pages\\Login.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\pages\\Home.js",["82"],"import React,{useState,  useEffect} from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Product from '../components/Productcard';\r\nimport Category from \"./Category\";\r\nconst Home = ({token , setToken }) =>{\r\n\r\n    document.title = \"Home | BUY SELL\"\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [listings, setListings] = useState([]);\r\n\r\n    \r\n\r\n    const fetchListings = async () =>{\r\n        setLoading(true)\r\n        try{\r\n            const response = await fetch('https://ecomm-backend-xcv34.herokuapp.com/api/listings')\r\n            const tours = await response.json()\r\n            setLoading(false)\r\n            setListings(tours)\r\n        } catch(error){\r\n            setLoading(false)\r\n            console.log(\"Error Occured\");\r\n            console.log(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(!token){\r\n            return (navigate('/login'));\r\n        }\r\n        fetchListings()\r\n    }, [token])\r\n\r\n    \r\n\r\n    if(loading){\r\n        return (\r\n            <>\r\n            <Navbar setToken={setToken} token={token} />\r\n            <div className=\"grid justify-items-center items-center h-screen\">\r\n                <div>\r\n                    <h3 className=\"text-center text-xl\">Loading..</h3>\r\n                    <p className=\"text-sm\">this might take a few minutes</p>\r\n                </div>\r\n            </div>\r\n            </>\r\n            \r\n        );\r\n    }\r\n    return(\r\n        <>\r\n        <Navbar setToken={setToken} token={token} />\r\n        {listings.length>0?\r\n        <>\r\n        <h2 className=\"text-2xl py-3 px-6 text-purple-600\">Recently Added</h2>\r\n        <div class=\"grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-x-6 gap-y-12 w-full mt-6 md:px-15 px-5 pt-5\">\r\n            {\r\n                listings.map((data)=>{\r\n                    //console.log(data);\r\n                    return <>\r\n                        <Product key={data.prodcutImg} nav={data._id} img={data.prodcutImg} title={data.title} description={data.description} price={data.expectedPrice} old={data.productAge} />\r\n                    </>\r\n                })\r\n            }\r\n        </div>\r\n        <br />\r\n        <Category setToken={setToken} token={token} endpoint={\"https://ecomm-backend-xcv34.herokuapp.com/api/listings/mobile/5\"} category={\"Mobiles\"} limit={true}  />\r\n        <Category setToken={setToken} token={token} endpoint={\"https://ecomm-backend-xcv34.herokuapp.com/api/listings/book/5\"} category={\"Books\"} limit={true}  />\r\n        <Category setToken={setToken} token={token} endpoint={\"https://ecomm-backend-xcv34.herokuapp.com/api/listings/laptop/5\"} category={\"Laptops\"} limit={true}  />\r\n        </>:<div className=\"text-xl px-5 py-5 mt-30 text-center\">:( Nothing to show!</div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\components\\useToken.js",["83"],"import { useState,useEffect } from 'react';\r\nimport {Buffer} from 'buffer';\r\n  // console.log(dtoken);\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken?.token\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n  \r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken.token);\r\n  };\r\n\r\n\r\n  const [userName, setUserName] = useState();\r\n\r\n  const getUser = () =>{\r\n    if(token){\r\n      let str = token.split('.')[1];\r\n      let buff = new Buffer(str, 'base64');\r\n      let base64ToStringNew = JSON.parse(buff.toString('ascii'));\r\n      return base64ToStringNew;\r\n    }\r\n    return;\r\n  }\r\n\r\n  useEffect(() => {\r\n      setUserName(getUser());\r\n  }, [token]);\r\n\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token,\r\n    userName,\r\n  }\r\n}","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\components\\Navbar.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\components\\Productcard.js",["84","85","86"],"import React from \"react\";\r\nimport Modal from \"./Modal\";\r\nconst Product = (props) =>{\r\n    var itsurl = `/item/${props.nav}`;\r\n    //console.log(props);\r\n    if(props.type==\"full\"){\r\n        console.log(props)\r\n        return<>\r\n                <div className=\"flex flex-wrap justify-around\">\r\n                    <div className=\"mt-10\">\r\n                        <img className=\"object-cover rounded h-98 w-96\" src={`https://ecomm-backend-xcv34.herokuapp.com/${props.img}`} />\r\n                    </div>\r\n                    <div className=\"text-left\">\r\n                        <h2 className=\"mt-5 md:mt-1 text-2xl text-purple-600\">{props.title}</h2><span className=\"text-xs mt-2 text-gray-500\">{props.old} Yrs Old</span><br />\r\n                        \r\n                        <span className=\"text-xl font-semibold  text-gray-600 mt-10\">Rs. {props.price}</span>\r\n                        <p className=\"text-sm text-gray-700 mt-6\">\r\n                            <span className=\"text-base text-gray-800\">Description</span> :<br /> \r\n                            {props.description}\r\n                        </p>\r\n                        <Modal email={props.email_c}/>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    }\r\n\r\n    return (\r\n        <a href={itsurl}>\r\n            <div className=\"shadow-lg rounded bg-gray-200 px-4 py-4\">\r\n                \r\n                <img className=\"object-cover rounded h-48 w-96\" src={`https://ecomm-backend-xcv34.herokuapp.com/${props.img}`} />\r\n                \r\n                <div className=\"mt-2\">\r\n                    <p className=\"text-gray-700 flex justify-between \">\r\n                        <span className=\"text-lg font-semibold\">{props.title}</span> <span className=\"text-xs mt-2\">{props.old} Yrs Old</span>\r\n                    </p>\r\n                    <p className=\"text-xs text-gray-700\">\r\n                        {props.description}\r\n                    </p>\r\n                    <span className=\"font-semibold text-gray-800\">Rs. {props.price}</span>\r\n                    \r\n                </div>\r\n                {props.delButton?<button onClick={props.deleteListing} className=\"px-2 py-1 font-semibold text-xs bg-red-500 text-white rounded shadow-sm\">Delete</button>:<></>}\r\n            </div>\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default Product","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\pages\\NewListing.js",["87","88","89"],"import { func } from \"prop-types\";\r\nimport React,{useState, useEffect} from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst NewListing = ({token, setToken}) =>{\r\n\r\n    const navigate = useNavigate();\r\n\r\n    \r\n\r\n\r\n    const [pName, setPName] = useState('');\r\n    const [productImage, setProductImage] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [expPrice, setExpPrice] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [imagePreview, setImagePreview] = useState('');\r\n\r\n    const [laoding, setLoading] = useState(false);\r\n    const [status, setStatus] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [success,setSuccess] = useState(false);\r\n    const[uploadedImg, setUploadedImg] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(!token){\r\n            return (navigate('/login'));\r\n        }\r\n    }, [token])\r\n\r\n    if(!token){\r\n        navigate('/login');\r\n    }\r\n\r\n    const handleProductAdd = (event) =>{\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        console.log(uploadedImg);\r\n        //console.log(token)\r\n        setError(false);\r\n        if(pName&&productImage&&category&&description&&expPrice&&age){\r\n\r\n            fetch('https://ecomm-backend-xcv34.herokuapp.com/api/listing/new',{\r\n                method:'POST',\r\n                headers:{\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization':`Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    title:pName,\r\n                    category:category,\r\n                    description:description,\r\n                    expectedPrice:expPrice,\r\n                    productAge:age,\r\n                    productImg:uploadedImg,\r\n                })\r\n            })\r\n            .then(function (response) {\r\n                return response.json();\r\n            })\r\n            //Then with the data from the response in JSON...\r\n            .then((data) => {\r\n                if(data.message===\"Product listed successfully\"){\r\n                    setLoading(false);\r\n                    setStatus(\"Product listed successfully\");\r\n                    setSuccess(true);\r\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n                }\r\n                else{\r\n                    setLoading(false);\r\n                    setError(true);\r\n                    setStatus('Something went wrong.');\r\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n                }\r\n                return console.log(data);\r\n            })\r\n            //Then with the error genereted...\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n            setLoading(false);\r\n            setStatus('Posting AD...');\r\n        }else{\r\n            setLoading(false);\r\n            setError(true);\r\n            setStatus('All the fields are required.');\r\n            window.scrollTo({ top: 0, behavior: 'smooth' });\r\n        }\r\n    }\r\n\r\n    const handleProductImageChange = async (event) => {\r\n        setLoading(true)\r\n        setImagePreview(URL.createObjectURL(event.target.files[0]));\r\n        setProductImage(event.target.files[0]);\r\n        let formData = new FormData();\r\n\r\n        formData.append(\"productImg\",event.target.files[0]);\r\n        //console.log(formData)\r\n        const resp = await fetch('https://ecomm-backend-xcv34.herokuapp.com/api/listing/newImg',{\r\n                                method:'POST',\r\n                                headers:{\r\n                                    // 'Content-Type': 'multipart/form-data',\r\n                                    'Authorization':`Bearer ${token}`,\r\n                                },\r\n                                body: formData,\r\n                            })\r\n        const img = await resp.json();\r\n        setUploadedImg(img.uploaded_img);\r\n        //console.log(img.uploaded_img);\r\n        //console.log(uploadedImg);\r\n        setLoading(false);\r\n        return uploadedImg;\r\n            // .then((data)=>{\r\n            //     return data.json()\r\n            // })\r\n            // .then((j)=>{\r\n            //     //console.log(j);\r\n            //     //console.log(JSON.stringify(j));\r\n            //     setUploadedImg(JSON.stringify(j));\r\n            //     console.log(\"Inside THEN\",uploadedImg);\r\n            //     return \"IMAGE UPLOADED\"\r\n            // })\r\n            \r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <Navbar setToken={setToken} token={token} />\r\n            <div className='flex justify-center mt-10'>\r\n\r\n                <div class=\"w-full max-w-xl\">\r\n\r\n                    <form onSubmit={handleProductAdd} className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\" enctype=\"multipart/form-data\">\r\n\r\n                        <div className=\"mb-4\">\r\n                            {error&&<div className='bg-red-300 text-base text-white rounded px-1 py-1'>\r\n                                {status}\r\n                            </div>\r\n                            }\r\n                            {success&&<div className='bg-green-500 text-base text-white rounded px-1 py-1'>\r\n                                {status}\r\n                            </div>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className='mb-4 text-center text-lg font-bold text-gray-600'>\r\n                            <h2>Add a new product to sell.</h2>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-sm font-bold tracking-tight text-gray-500 mb-2\" for=\"pname\">\r\n                                Product Name\r\n                            </label>\r\n                            <input \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \r\n                                id=\"pname\" \r\n                                type=\"text\" \r\n                                placeholder=\"Product Name\"\r\n                                value = {pName}\r\n                                onChange={(e)=>setPName(e.target.value)}\r\n                            />\r\n                            <p className=\"text-red-500 text-xs italic\"></p>\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-sm font-bold tracking-tight text-gray-500 mb-2\" for=\"category\">\r\n                                Product Category\r\n                            </label>\r\n                            <select  onChange={(e)=>{setCategory(e.target.value)}} name=\"category\" id=\"category\" className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\">\r\n                                <option disabled selected value={category}> -- select an option -- </option>\r\n                                <option value=\"mobile\">Mobile</option>\r\n                                <option value=\"laptop\">Laptop</option>\r\n                                <option value=\"books\">Book</option>\r\n                            </select>\r\n                            <p className=\"text-red-500 text-xs italic\"></p>\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-sm font-bold tracking-tight text-gray-500 mb-2\" for=\"description\">\r\n                                Description\r\n                            </label>\r\n                            <textarea value={description} onChange={(e)=>{setDescription(e.target.value)}} className=\" shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"></textarea>\r\n                            <p className=\"text-red-500 text-xs italic\"></p>\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-sm font-bold tracking-tight text-gray-500 mb-2\" for=\"expPrice\">\r\n                                Expected Price \r\n                            </label>\r\n                            <input \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \r\n                                id=\"expPrice\" \r\n                                type=\"number\" \r\n                                placeholder=\"Rs1000\"\r\n                                value = {expPrice}\r\n                                onChange={(e)=>setExpPrice(e.target.value)}\r\n                            />\r\n                            <p className=\"text-red-500 text-xs italic\"></p>\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-sm font-bold tracking-tight text-gray-500 mb-2\" for=\"age\">\r\n                                How old is your product? \r\n                            </label>\r\n                            <input \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \r\n                                id=\"age\" \r\n                                type=\"number\" \r\n                                placeholder=\"10 yrs old\"\r\n                                value = {age}\r\n                                onChange={(e)=>setAge(e.target.value)}\r\n                            />\r\n                            <p className=\"text-red-500 text-xs italic\"></p>\r\n                        </div>\r\n\r\n                        \r\n\r\n                        <br />\r\n                        \r\n                        <div className=\"max-w-2xl rounded-lg\">\r\n                            <div className=\"m-4\">\r\n                                <label className=\"inline-block mb-2 text-gray-500\">Add product image</label>\r\n                                <div className=\"flex items-center justify-center w-full\">\r\n                                <label className=\"flex flex-col w-full h-32 border-4 border-blue-200 border-dashed hover:bg-gray-100 hover:border-gray-300\">\r\n                                    <div className=\"flex flex-col items-center justify-center pt-7\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-8 h-8 text-gray-400 group-hover:text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\r\n                                    </svg>\r\n                                    <p className=\"pt-1 text-sm tracking-wider text-gray-400 group-hover:text-gray-600\">\r\n                                        Attach a file</p>\r\n                                    </div>\r\n                                    <input type=\"file\" className=\"opacity-0\" \r\n                                    onChange={handleProductImageChange} \r\n                                    />\r\n                                </label>\r\n                                </div>\r\n                                {imagePreview?<div className=\"mb-4\">\r\n                                    <img className=\"w-full p-2 rounded lg:w-1/3 md:w-1/3 md:h-1/5\" src={imagePreview} />\r\n                                    <br />\r\n                                    <button className=\"underline decoration-dashed text-red-600\" onClick={()=>{setProductImage('');setImagePreview('');}}>Remove</button>\r\n                                </div>:<></>}\r\n                            </div>\r\n                        </div>\r\n                        \r\n\r\n                        <div className=\"flex items-center justify-center\">\r\n                            {success?<></>:<button \r\n                                className=\"w-full bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" \r\n                                type=\"submit\"\r\n                                disabled={laoding}\r\n                            >\r\n                                {laoding?<>Please wait ...</>:<>Post</>}\r\n                            </button>}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NewListing;","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\pages\\Mylistings.js",["90","91"],"import React,{useState,  useEffect} from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Product from '../components/Productcard';\r\nconst MyListings = ({token , setToken }) =>{\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [listings, setListings] = useState([]);\r\n\r\n    \r\n\r\n    const fetchListings = async () =>{\r\n        setLoading(true)\r\n        try{\r\n            const response = await fetch('https://ecomm-backend-xcv34.herokuapp.com/api/listings/my',{\r\n                headers:{\r\n                    'Authorization' : `Bearer ${token}`\r\n                }\r\n            })\r\n            const tours = await response.json()\r\n            //console.log(tours)\r\n            setLoading(false)\r\n            setListings(tours)\r\n        } catch(error){\r\n            setLoading(false)\r\n            console.log(\"Error Occured\");\r\n            console.log(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(!token){\r\n            return (navigate('/login'));\r\n        }\r\n        fetchListings()\r\n    }, [token])\r\n\r\n    const handleDelete = async (id) =>{\r\n        setLoading(true)\r\n        try{\r\n            const response = await fetch('https://ecomm-backend-xcv34.herokuapp.com/api/listings/delete',{\r\n                method:\"POST\",\r\n                headers:{\r\n                    'Authorization' : `Bearer ${token}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body:JSON.stringify({\r\n                    id:id\r\n                })\r\n            })\r\n            const tours = await response.json()\r\n            console.log(tours)\r\n            setLoading(false)\r\n            setListings(tours)\r\n        } catch(error){\r\n            setLoading(false)\r\n            console.log(\"Error Occured\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    if(loading){\r\n        return (\r\n            <div className=\"grid justify-items-center items-center h-screen\">\r\n                <div>\r\n                    <h3 className=\"text-center text-xl\">Loading..</h3>\r\n                    <p className=\"text-sm\">this might take a few minutes</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return(\r\n        <>\r\n        <Navbar setToken={setToken} token={token} />\r\n        <div class=\"grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-x-6 gap-y-12 w-full mt-6 md:px-15 px-5 py-10\">\r\n            {listings.length>0?<>\r\n                {listings.map((data)=>{\r\n                    console.log(data._id);\r\n                    return <>\r\n                        <Product nav={data._id} img={data.prodcutImg} title={data.title} description={data.description} price={data.expectedPrice} old={data.productAge} deleteListing={()=>handleDelete(data._id)} delButton={true} img={data.prodcutImg} />\r\n                    </>\r\n                })}\r\n                </>:<p className=\"text-center\">Nothing to show!</p>\r\n            }\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MyListings;","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\pages\\Category.js",["92"],"import React,{useState,  useEffect} from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Product from '../components/Productcard';\r\nconst Category = ({token , setToken, category, endpoint , limit}) =>{\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [listings, setListings] = useState([]);\r\n\r\n    if(!limit){\r\n        document.title = `${category} - BUY SELL`\r\n    }\r\n    \r\n    const fetchListings = async () =>{\r\n        setLoading(true)\r\n        try{\r\n            const response = await fetch(endpoint)\r\n            const tours = await response.json()\r\n            setLoading(false)\r\n            setListings(tours)\r\n        } catch(error){\r\n            setLoading(false)\r\n            console.log(\"Error Occured\");\r\n            console.log(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(!token){\r\n            return (navigate('/login'));\r\n        }\r\n        fetchListings()\r\n    }, [token])\r\n\r\n    if(limit){\r\n        if(loading){\r\n            return <>\r\n                <h2 className=\"text-2xl py-3 px-6 text-purple-600\">{category}</h2>\r\n                <h3 className=\"text-center text-xl\">Loading...</h3>\r\n            </>\r\n        }\r\n        return(\r\n        <>\r\n        <a className=\"text-2xl py-3 px-6 text-purple-600\" href={`/${category}`}>{category}</a>\r\n        {listings.length>0?<div class=\"grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-x-6 gap-y-12 w-full mt-6 md:px-15 px-5 py-10\">\r\n            {\r\n                listings.map((data)=>{\r\n                    return <>\r\n                        <Product nav={data._id} img={data.prodcutImg} title={data.title} description={data.description} price={data.expectedPrice} old={data.productAge} />\r\n                    </> \r\n                })\r\n            }\r\n        </div>:<div className=\"text-xl px-5 py-5 mt-30 text-center\">:( Nothing to show!</div>}\r\n        <a className=\"mb-10 px-10 pb-10 text-blue-400\" href={`/${category}`}>more...</a><br /><br />\r\n        </>\r\n        )\r\n    }\r\n\r\n    if(loading){\r\n        return (\r\n            <div className=\"grid justify-items-center items-center h-screen\">\r\n                <div>\r\n                    <h3 className=\"text-center text-xl\">Loading..</h3>\r\n                    <p className=\"text-sm\">this might take a few minutes</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return(\r\n        <>\r\n        <Navbar setToken={setToken} token={token} />\r\n        <h2 className=\"text-2xl py-3 px-6 text-purple-600\">{category}</h2>\r\n        {listings.length>0?<div class=\"grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-x-6 gap-y-12 w-full mt-6 md:px-15 px-5 py-10\">\r\n            {\r\n                listings.map((data)=>{\r\n                    return <>\r\n                        <Product nav={data._id} img={data.prodcutImg} title={data.title} description={data.description} price={data.expectedPrice} old={data.productAge} />\r\n                    </>\r\n                })\r\n            }\r\n        </div>:<div className=\"text-xl px-5 py-5 mt-30 text-center\">:( Nothing to show!</div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Category;","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\components\\Searchbar.js",["93","94","95"],"import React,{useState,  useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from '../components/Navbar';\r\n\r\nconst Searchbar = ({token}) =>{\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [query, setQuery] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [listings, setListings] = useState([]);\r\n\r\n    const fetchListings = async () =>{\r\n        setLoading(true)\r\n        var endpoint = `https://ecomm-backend-xcv34.herokuapp.com/api/listings/search?q=${query}`\r\n        try{\r\n            const response = await fetch(endpoint)\r\n            const tours = await response.json()\r\n            //console.log(tours)\r\n            setLoading(false)\r\n            setListings(tours)\r\n        } catch(error){\r\n            setLoading(false)\r\n            console.log(\"Error Occured\");\r\n            console.log(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(!token){\r\n            //console.log(\"HAHA\");\r\n            return (navigate('/login'));\r\n        }\r\n    }, [token])\r\n\r\n    const handleSearch = (e) =>{\r\n        setQuery(e.target.value);\r\n        console.log(e.target.value);\r\n        if(query.length>2){\r\n            fetchListings();\r\n        }\r\n        \r\n    }\r\n    const handleBackSpace = (e) =>{\r\n        if(e.keyCode === 8){\r\n            setListings([]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"flex flex-col\">\r\n            <div className=\"flex border-2 rounded sticky top-0\">\r\n                <input type=\"text\" className=\"px-4 py-2 w-full md:w-auto outline-0\" placeholder=\"Search...\" onChange={handleSearch} value={query} onKeyDown={handleBackSpace} />\r\n                <button className=\"flex items-center justify-center px-4 border-0\">\r\n                    <svg className=\"w-6 h-6 text-gray-500\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M16.32 14.9l5.39 5.4a1 1 0 0 1-1.42 1.4l-5.38-5.38a8 8 0 1 1 1.41-1.41zM10 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n            <div className=\"overflow-visible h-0 z-10\">\r\n                {listings.length>0?<div className=\"bg-slate-100 px-2 py-2\">\r\n                    {listings && listings.map((data)=>{\r\n                        return<a href={`/item/${data._id}`}><div className=\"overflow-auto flex mt-4 rounded bg-gray-200 text-gray-600 px-4 py-4 w-80\">{data.title}</div></a>\r\n                    })}\r\n                </div>:null}\r\n            </div>\r\n        </div>\r\n        \r\n        </> \r\n    );\r\n}\r\n\r\nexport default Searchbar;","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\pages\\Productpage.js",["96"],"import React,{useState,  useEffect} from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Product from '../components/Productcard';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nconst ProductPage = ({token , setToken}) =>{\r\n    const params = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [listings, setListings] = useState([]);\r\n\r\n    const fetchListings = async () =>{\r\n        setLoading(true)\r\n        var endpoint = `https://ecomm-backend-xcv34.herokuapp.com/api/listings/find?id=${params.id}`\r\n        try{\r\n            const response = await fetch(endpoint)\r\n            const tours = await response.json()\r\n            setLoading(false)\r\n            setListings(tours)\r\n            //console.log(tours)\r\n        } catch(error){\r\n            setLoading(false)\r\n            console.log(\"Error Occured\");\r\n            console.log(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(!token){\r\n            return (navigate('/login'));\r\n        }\r\n        fetchListings()\r\n    }, [token])\r\n\r\n    // if(listings.length===1){\r\n    //     document.title = `${listings[0].title} - Rs ${listings[0].expectedPrice}`\r\n    // }\r\n    if(listings.length>0){\r\n        document.title = `${listings[0].title}`;\r\n    }\r\n    if(loading){\r\n        return (\r\n            <div className=\"grid justify-items-center items-center h-screen\">\r\n                <div>\r\n                    <h3 className=\"text-center text-xl\">Loading..</h3>\r\n                    <p className=\"text-sm\">this might take a few minutes</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return(\r\n        <>\r\n        <Navbar setToken={setToken} token={token} />\r\n        {listings && <span className=\"text-sm py-3 px-6 text-gray-600 pt-6\">../{listings.length>0?<>{listings[0].title} - Rs. {listings[0].expectedPrice}</> :<></>}</span>}\r\n        {listings.length>0?<div class=\"px-5 md:py-5 md:mt-10 pb-10\">\r\n            {\r\n                listings.map((data)=>{\r\n                    console.log(data);\r\n                    return <>\r\n                        <Product email_c={data.username} type=\"full\" nav={data._id} img={data.prodcutImg} title={data.title} description={data.description} price={data.expectedPrice} old={data.productAge} />\r\n                    </>\r\n                })\r\n            }\r\n        </div>:<div className=\"text-xl px-5 py-5 mt-30 text-center\">:( Nothing to show!</div>}\r\n        </>\r\n    );\r\n}\r\nexport default ProductPage","C:\\Users\\ASUS\\OneDrive\\Desktop\\olx-clone\\ecomm-frontend\\src\\components\\Modal.js",[],["97","98"],{"ruleId":"99","severity":1,"message":"100","line":6,"column":25,"nodeType":"101","messageId":"102","endLine":6,"endColumn":30},{"ruleId":"99","severity":1,"message":"103","line":6,"column":32,"nodeType":"101","messageId":"102","endLine":6,"endColumn":38},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"99","severity":1,"message":"108","line":1,"column":15,"nodeType":"101","messageId":"102","endLine":1,"endColumn":23},{"ruleId":"99","severity":1,"message":"109","line":1,"column":25,"nodeType":"101","messageId":"102","endLine":1,"endColumn":34},{"ruleId":"110","severity":1,"message":"111","line":69,"column":8,"nodeType":"112","endLine":69,"endColumn":15,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"111","line":35,"column":8,"nodeType":"112","endLine":35,"endColumn":15,"suggestions":"114"},{"ruleId":"110","severity":1,"message":"115","line":35,"column":6,"nodeType":"112","endLine":35,"endColumn":13,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":6,"column":18,"nodeType":"119","messageId":"120","endLine":6,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":11,"column":25,"nodeType":"123","endLine":11,"endColumn":138},{"ruleId":"121","severity":1,"message":"122","line":31,"column":17,"nodeType":"123","endLine":31,"endColumn":130},{"ruleId":"99","severity":1,"message":"124","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":31,"column":8,"nodeType":"112","endLine":31,"endColumn":15,"suggestions":"125"},{"ruleId":"121","severity":1,"message":"122","line":244,"column":37,"nodeType":"123","endLine":244,"endColumn":121},{"ruleId":"110","severity":1,"message":"126","line":37,"column":8,"nodeType":"112","endLine":37,"endColumn":15,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":81,"column":230,"nodeType":"130","messageId":"131","endLine":81,"endColumn":251},{"ruleId":"110","severity":1,"message":"126","line":34,"column":8,"nodeType":"112","endLine":34,"endColumn":15,"suggestions":"132"},{"ruleId":"99","severity":1,"message":"133","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":14},{"ruleId":"99","severity":1,"message":"134","line":10,"column":12,"nodeType":"101","messageId":"102","endLine":10,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":33,"column":8,"nodeType":"112","endLine":33,"endColumn":15,"suggestions":"135"},{"ruleId":"110","severity":1,"message":"126","line":35,"column":8,"nodeType":"112","endLine":35,"endColumn":15,"suggestions":"136"},{"ruleId":"104","replacedBy":"137"},{"ruleId":"106","replacedBy":"138"},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["139"],"no-negated-in-lhs",["140"],"'useState' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["141"],["142"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["143"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'func' is defined but never used.",["144"],"React Hook useEffect has missing dependencies: 'fetchListings' and 'navigate'. Either include them or remove the dependency array.",["145"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["146"],"'Navbar' is defined but never used.","'loading' is assigned a value but never used.",["147"],["148"],["139"],["140"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"149","fix":"151"},{"desc":"152","fix":"153"},{"desc":"149","fix":"154"},{"desc":"155","fix":"156"},{"desc":"155","fix":"157"},{"desc":"149","fix":"158"},{"desc":"155","fix":"159"},"Update the dependencies array to be: [navigate, token]",{"range":"160","text":"161"},{"range":"162","text":"161"},"Update the dependencies array to be: [getUser, token]",{"range":"163","text":"164"},{"range":"165","text":"161"},"Update the dependencies array to be: [fetchListings, navigate, token]",{"range":"166","text":"167"},{"range":"168","text":"167"},{"range":"169","text":"161"},{"range":"170","text":"167"},[2257,2264],"[navigate, token]",[1037,1044],[869,876],"[getUser, token]",[1001,1008],[1122,1129],"[fetchListings, navigate, token]",[1015,1022],[1037,1044],[1127,1134]]